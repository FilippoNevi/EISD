;
; File generated by cc65 v 2.17 - Git 582aa41
;
	.fopt		compiler,"cc65 v 2.17 - Git 582aa41"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.import		__errno
	.import		__cbm_filetype
	.export		_readdir
	.import		__dirread
	.import		__dirread1

; ---------------------------------------------------------------
; __near__ struct dirent * __near__ __fastcall__ readdir (register __near__ struct DIR *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_readdir: near

.segment	"RODATA"

L0012:
	.word	$0000
L0019:
	.word	$0000
L002A:
	.word	$0000
L0033:
	.word	$0000

.segment	"BSS"

L0006:
	.res	1,$00
L0007:
	.res	1,$00
L0009:
	.res	23,$00

.segment	"CODE"

	jsr     pushax
	ldy     #$00
	ldx     #$04
	jsr     regswap2
	lda     regbank+2
	ldx     regbank+3
	jsr     pushax
	lda     regbank+1
	jsr     pusha
	lda     regbank+0
	jsr     pusha
	ldy     #$40
	jsr     subysp
	ldy     #$03
	lda     (regbank+4),y
	sta     L0009+17+1
	dey
	lda     (regbank+4),y
	sta     L0009+17
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	lda     #$02
	jsr     leaa0sp
	jsr     pushax
	lda     #$02
	jsr     __dirread
	tax
	jeq     L0005
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	lda     #<(L0009+19)
	ldx     #>(L0009+19)
	jsr     pushax
	lda     #$02
	jsr     __dirread
	tax
	jeq     L0005
	lda     #$00
	sta     regbank+0
	lda     sp+1
	sta     regbank+2+1
	lda     sp
	sta     regbank+2
L001A:	lda     regbank+0
	cmp     #$40
	bcs     L001B
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	lda     regbank+2
	ldx     regbank+2+1
	jsr     __dirread1
	tax
	jeq     L0005
	inc     regbank+0
	ldy     #$00
	lda     (regbank+2),y
	beq     L001B
	inc     regbank+2
	bne     L001A
	inc     regbank+2+1
	jmp     L001A
L001B:	ldy     #$03
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     regbank+0
	jsr     incax4
	clc
	adc     ptr1
	pha
	txa
	adc     ptr1+1
	tax
	pla
	ldy     #$02
	sta     (regbank+4),y
	iny
	txa
	sta     (regbank+4),y
	ldx     #$00
	lda     (sp,x)
	cmp     #$42
	jeq     L008F
	txa
	sta     regbank+1
	sta     L0007
	sta     L0006
	lda     sp+1
	sta     regbank+2+1
	lda     sp
	sta     regbank+2
	jmp     L008E
L0089:	lda     L0006
	beq     L0044
	cmp     #$01
	beq     L004A
	cmp     #$02
	beq     L0065
	cmp     #$03
	jeq     L0072
	jmp     L008D
L0044:	lda     (regbank+2,x)
	cmp     #$22
	jne     L008D
	lda     #$01
	sta     L0006
	jmp     L008D
L004A:	ldy     #$00
	lda     (regbank+2),y
	cmp     #$22
	bne     L008B
	ldy     L0007
	txa
	sta     L0009,y
	lda     L0007
	sta     L0009+22
	lda     L0009+17
	cmp     #$03
	lda     L0009+17+1
	sbc     #$00
	bcc     L008A
	lda     #$02
	sta     L0006
	jmp     L008D
L008A:	lda     #$05
	sta     L0009+21
	lda     #<(L0009)
	ldx     #>(L0009)
	jmp     L0005
L008B:	lda     L0007
	cmp     #$10
	bcs     L008D
	lda     #<(L0009)
	ldx     #>(L0009)
	clc
	adc     L0007
	bcc     L0061
	inx
L0061:	sta     ptr1
	stx     ptr1+1
	lda     (regbank+2),y
	sta     (ptr1),y
	inc     L0007
	jmp     L008D
L0065:	lda     (regbank+2,x)
	cmp     #$20
	beq     L008D
	jsr     __cbm_filetype
	sta     L0009+21
	ldy     #$00
	lda     (regbank+2),y
	cmp     #$44
	bne     L006B
	lda     #$03
	sta     L0006
	jmp     L008D
L006B:	lda     #<(L0009)
	ldx     #>(L0009)
	jmp     L0005
L0072:	lda     (regbank+2,x)
	cmp     #$45
	beq     L0075
	cmp     #$49
	bne     L008C
	lda     #$02
	jmp     L0088
L008C:	lda     #$04
L0088:	sta     L0009+21
L0075:	lda     #<(L0009)
	ldx     #>(L0009)
	jmp     L0005
L008D:	inc     regbank+1
	inc     regbank+2
	bne     L0082
	inc     regbank+2+1
L0082:	ldx     #$00
L008E:	lda     regbank+1
	cmp     regbank+0
	jcc     L0089
	lda     #$0B
	sta     __errno
	stx     __errno+1
L008F:	txa
L0005:	pha
	stx     tmp1
	ldy     #$45
	ldx     #$05
L0087:	lda     (sp),y
	sta     regbank+0,x
	dey
	dex
	bpl     L0087
	ldx     tmp1
	pla
	ldy     #$46
	jmp     addysp

.endproc

