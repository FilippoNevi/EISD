;
; File generated by cc65 v 2.17 - Git 582aa41
;
	.fopt		compiler,"cc65 v 2.17 - Git 582aa41"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.import		_isdigit
	.import		_islower
	.import		_isspace
	.import		_isupper
	.import		__seterrno
	.export		_strtol

; ---------------------------------------------------------------
; long __near__ __fastcall__ strtol (__near__ const unsigned char *, __near__ __near__ unsigned char * *, int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_strtol: near

.segment	"CODE"

	jsr     pushax
	lda     regbank+4
	ldx     regbank+5
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	sta     regbank+4
	stx     regbank+4+1
	jsr     pushl0
	jsr     pusha
	jsr     pusha
	jsr     push0
	jsr     decsp6
	jmp     L000A
L0008:	inc     regbank+4
	bne     L000A
	inc     regbank+4+1
L000A:	ldy     #$00
	lda     (regbank+4),y
	ldx     #$00
	jsr     _isspace
	stx     tmp1
	ora     tmp1
	bne     L0008
	tay
	lda     (regbank+4),y
	cmp     #$2B
	beq     L0017
	cmp     #$2D
	bne     L0011
	lda     #$01
	ldy     #$09
	sta     (sp),y
L0017:	inc     regbank+4
	bne     L0011
	inc     regbank+4+1
L0011:	ldy     #$10
	lda     (sp),y
	iny
	ora     (sp),y
	bne     L0091
	tax
	lda     (regbank+4,x)
	cmp     #$30
	bne     L0090
	inc     regbank+4
	bne     L0020
	inc     regbank+4+1
L0020:	lda     (regbank+4,x)
	cmp     #$58
	beq     L008E
	cmp     #$D8
	bne     L008F
L008E:	inc     regbank+4
	bne     L0025
	inc     regbank+4+1
L0025:	lda     #$10
	jmp     L00A2
L008F:	lda     #$08
	dey
	jsr     staxysp
	jmp     L002F
L0090:	lda     #$0A
L00A2:	dey
	jsr     staxysp
	jmp     L002F
L0091:	lda     (sp),y
	bne     L002F
	dey
	lda     (sp),y
	cmp     #$10
	bne     L002F
	ldy     #$00
	lda     (regbank+4),y
	cmp     #$30
	bne     L002F
	iny
	lda     (regbank+4),y
	cmp     #$58
	beq     L0096
	cmp     #$D8
	bne     L002F
L0096:	lda     #$02
	clc
	adc     regbank+4
	sta     regbank+4
	bcc     L002F
	inc     regbank+4+1
L002F:	ldy     #$09
	lda     (sp),y
	beq     L003B
	ldx     #$00
	stx     sreg
	lda     #$80
	jmp     L00AA
L003B:	ldx     #$FF
	stx     sreg
	lda     #$7F
L00AA:	sta     sreg+1
	txa
	ldy     #$01
	jsr     steaxysp
	ldy     #$04
	jsr     ldeaxysp
	jsr     pusheax
	ldy     #$15
	jsr     ldaxysp
	jsr     axlong
	jsr     tosumodeax
	ldy     #$00
	sta     (sp),y
	ldy     #$04
	jsr     ldeaxysp
	jsr     pusheax
	ldy     #$15
	jsr     ldaxysp
	jsr     axlong
	jsr     tosudiveax
	ldy     #$01
	jsr     steaxysp
L0047:	ldy     #$00
	lda     (regbank+4),y
	ldx     #$00
	jsr     _isdigit
	stx     tmp1
	ora     tmp1
	beq     L004B
	ldx     #$00
	lda     (regbank+4,x)
	ldy     #$30
	jmp     L00A8
L004B:	tay
	lda     (regbank+4),y
	ldx     #$00
	jsr     _isupper
	stx     tmp1
	ora     tmp1
	beq     L0051
	ldx     #$00
	lda     (regbank+4,x)
	ldy     #$B7
	jmp     L00A8
L0051:	tay
	lda     (regbank+4),y
	ldx     #$00
	jsr     _islower
	stx     tmp1
	ora     tmp1
	jeq     L0048
	ldx     #$00
	lda     (regbank+4,x)
	ldy     #$37
L00A8:	jsr     decaxy
	ldy     #$05
	sta     (sp),y
	ldy     #$10
	cmp     (sp),y
	lda     #$00
	iny
	sbc     (sp),y
	bcs     L0048
	ldy     #$0D
	jsr     ldeaxysp
	jsr     pusheax
	ldy     #$08
	jsr     ldeaxysp
	jsr     tosugteax
	bne     L0062
	ldy     #$0D
	jsr     ldeaxysp
	jsr     pusheax
	ldy     #$08
	jsr     ldeaxysp
	jsr     toseqeax
	beq     L0061
	ldy     #$05
	lda     (sp),y
	sec
	ldy     #$00
	sbc     (sp),y
	sta     tmp1
	lda     tmp1
	beq     L0061
	bcc     L0061
L0062:	lda     #$01
	ldy     #$08
	sta     (sp),y
L0061:	ldy     #$08
	lda     (sp),y
	bne     L0069
	ldy     #$0D
	jsr     ldeaxysp
	jsr     pusheax
	ldy     #$15
	jsr     ldaxysp
	jsr     axlong
	jsr     tosumuleax
	jsr     pusheax
	ldy     #$09
	ldx     #$00
	lda     (sp),y
	jsr     axulong
	jsr     tosaddeax
	ldy     #$0A
	jsr     steaxysp
	ldy     #$06
	ldx     #$00
	lda     #$01
	jsr     addeqysp
L0069:	inc     regbank+4
	jne     L0047
	inc     regbank+4+1
	jmp     L0047
L0048:	ldy     #$13
	lda     (sp),y
	dey
	ora     (sp),y
	beq     L0078
	ldy     #$06
	lda     (sp),y
	iny
	ora     (sp),y
	beq     L0073
	ldy     #$13
	jsr     ldaxysp
	sta     sreg
	stx     sreg+1
	lda     regbank+4
	ldy     #$00
	sta     (sreg),y
	iny
	lda     regbank+4+1
	jmp     L00A5
L0073:	ldy     #$13
	jsr     ldaxysp
	sta     sreg
	stx     sreg+1
	ldy     #$15
	jsr     ldaxysp
	ldy     #$00
	sta     (sreg),y
	iny
	txa
L00A5:	sta     (sreg),y
L0078:	ldy     #$08
	lda     (sp),y
	beq     L0083
	lda     #$0F
	jsr     __seterrno
	ldy     #$09
	lda     (sp),y
	beq     L007F
	ldx     #$00
	stx     sreg
	lda     #$80
	sta     sreg+1
	txa
	jmp     L0088
L007F:	ldx     #$FF
	stx     sreg
	lda     #$7F
	sta     sreg+1
	txa
	jmp     L0088
L0083:	iny
	lda     (sp),y
	beq     L0085
	ldy     #$0D
	jsr     ldeaxysp
	jsr     negeax
	jmp     L0088
L0085:	ldy     #$0D
	jsr     ldeaxysp
L0088:	pha
	ldy     #$0E
	lda     (sp),y
	sta     regbank+4
	iny
	lda     (sp),y
	sta     regbank+5
	pla
	ldy     #$16
	jmp     addysp

.endproc

