;
; File generated by cc65 v 2.17 - Git 582aa41
;
	.fopt		compiler,"cc65 v 2.17 - Git 582aa41"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.import		_strlen
	.import		_memcpy
	.import		_sprintf
	.import		__tz
	.export		_strftime

.segment	"RODATA"

L00DA:
	.byte	$25,$2E,$33,$73,$20,$25,$2E,$33,$73,$25,$33,$64,$20,$25,$30,$32
	.byte	$64,$3A,$25,$30,$32,$64,$3A,$25,$30,$32,$64,$20,$25,$64,$00
L006B:
	.byte	$25,$30,$34,$64,$2D,$25,$30,$32,$64,$2D,$25,$30,$32,$64,$00
L0111	:=	L006B+0
L0062:
	.byte	$25,$30,$32,$64,$2F,$25,$30,$32,$64,$2F,$25,$30,$32,$64,$00
L00B2:
	.byte	$25,$30,$32,$64,$3A,$25,$30,$32,$64,$3A,$25,$30,$32,$64,$00
L000D:
	.byte	$57,$65,$64,$6E,$65,$73,$64,$61,$79,$00
L0027:
	.byte	$53,$65,$70,$74,$65,$6D,$62,$65,$72,$00
L0019:
	.byte	$46,$65,$62,$72,$75,$61,$72,$79,$00
L0013:
	.byte	$53,$61,$74,$75,$72,$64,$61,$79,$00
L002B:
	.byte	$4E,$6F,$76,$65,$6D,$62,$65,$72,$00
L000F:
	.byte	$54,$68,$75,$72,$73,$64,$61,$79,$00
L002D:
	.byte	$44,$65,$63,$65,$6D,$62,$65,$72,$00
L0017:
	.byte	$4A,$61,$6E,$75,$61,$72,$79,$00
L0029:
	.byte	$4F,$63,$74,$6F,$62,$65,$72,$00
L000B:
	.byte	$54,$75,$65,$73,$64,$61,$79,$00
L0025:
	.byte	$41,$75,$67,$75,$73,$74,$00
L0011:
	.byte	$46,$72,$69,$64,$61,$79,$00
L0007:
	.byte	$53,$75,$6E,$64,$61,$79,$00
L0009:
	.byte	$4D,$6F,$6E,$64,$61,$79,$00
L001B:
	.byte	$4D,$61,$72,$63,$68,$00
L001D:
	.byte	$41,$70,$72,$69,$6C,$00
L007B	:=	L006B+10
L0083	:=	L006B+10
L011A	:=	L006B+10
L0021:
	.byte	$4A,$75,$6E,$65,$00
L0096	:=	L006B+10
L009D	:=	L006B+10
L00A5	:=	L006B+10
L00F7	:=	L006B+10
L00F0:
	.byte	$25,$30,$33,$64,$00
L00CA:
	.byte	$25,$2E,$33,$73,$00
L00D2	:=	L00CA+0
L0074	:=	L006B+10
L00E9	:=	L006B+10
L0023:
	.byte	$4A,$75,$6C,$79,$00
L001F:
	.byte	$4D,$61,$79,$00
L00BB:
	.byte	$25,$34,$64,$00
L0103:
	.byte	$41,$4D,$00
L010A	:=	L00DA+28
L008F:
	.byte	$61,$6D,$00
L008C:
	.byte	$70,$6D,$00
L0100:
	.byte	$50,$4D,$00

; ---------------------------------------------------------------
; unsigned int __near__ __fastcall__ strftime (__near__ unsigned char *, unsigned int, __near__ const unsigned char *, __near__ const struct tm *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_strftime: near

.segment	"RODATA"

L0006:
	.addr	L0007
	.addr	L0009
	.addr	L000B
	.addr	L000D
	.addr	L000F
	.addr	L0011
	.addr	L0013
L0016:
	.addr	L0017
	.addr	L0019
	.addr	L001B
	.addr	L001D
	.addr	L001F
	.addr	L0021
	.addr	L0023
	.addr	L0025
	.addr	L0027
	.addr	L0029
	.addr	L002B
	.addr	L002D

.segment	"BSS"

L002F:
	.res	2,$00
L0030:
	.res	2,$00
L0031:
	.res	1,$00
L0033:
	.res	40,$00
L0034:
	.res	2,$00

.segment	"CODE"

	jsr     pushax
	lda     #$00
	sta     L002F
	sta     L002F+1
L0037:	lda     L002F
	ldy     #$04
	cmp     (sp),y
	lda     L002F+1
	iny
	sbc     (sp),y
	bcc     L003B
	ldx     #$00
	txa
	jmp     incsp8
L003B:	ldy     #$03
	jsr     ldaxysp
	sta     regsave
	stx     regsave+1
	jsr     incax1
	ldy     #$02
	jsr     staxysp
	ldy     #$00
	lda     (regsave),y
	sta     L0031
	cmp     #$00
	bne     L0133
	ldy     #$07
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	lda     #$00
	tay
	sta     (ptr1),y
	lda     L002F
	ldx     L002F+1
	jmp     incsp8
L0133:	lda     L0031
	cmp     #$25
	jne     L0045
	lda     #>(L0033)
	sta     L0034+1
	lda     #<(L0033)
	sta     L0034
	ldy     #$03
	jsr     ldaxysp
	sta     regsave
	stx     regsave+1
	jsr     incax1
	ldy     #$02
	jsr     staxysp
	ldy     #$00
	lda     (regsave),y
	cmp     #$25
	jeq     L0135
	cmp     #$41
	jeq     L0055
	cmp     #$42
	jeq     L005A
	cmp     #$44
	jeq     L005F
	cmp     #$46
	jeq     L0068
	cmp     #$48
	jeq     L0071
	cmp     #$49
	jeq     L0078
	cmp     #$4D
	jeq     L0080
	cmp     #$50
	jeq     L0087
	cmp     #$53
	jeq     L0093
	cmp     #$55
	jeq     L009A
	cmp     #$57
	jeq     L00A2
	cmp     #$58
	jeq     L00AF
	cmp     #$59
	jeq     L00B8
	cmp     #$5A
	jeq     L00BF
	cmp     #$61
	jeq     L00C7
	cmp     #$62
	jeq     L00CF
	cmp     #$63
	jeq     L00D7
	cmp     #$64
	jeq     L00E6
	cmp     #$6A
	jeq     L00ED
	cmp     #$6D
	jeq     L00F4
	cmp     #$70
	jeq     L00FB
	cmp     #$77
	jeq     L0107
	cmp     #$78
	jeq     L010E
	cmp     #$79
	jeq     L0117
	jmp     L0136
L0135:	sta     L0033
	sty     L0033+1
	jmp     L004B
L0055:	jsr     ldax0sp
	ldy     #$0D
	jsr     ldaxidx
	jsr     aslax1
	clc
	adc     #<(L0006)
	tay
	txa
	adc     #>(L0006)
	tax
	tya
	jsr     ldaxi
	sta     L0034
	stx     L0034+1
	jmp     L004B
L005A:	jsr     ldax0sp
	ldy     #$09
	jsr     ldaxidx
	jsr     aslax1
	clc
	adc     #<(L0016)
	tay
	txa
	adc     #>(L0016)
	tax
	tya
	jsr     ldaxi
	sta     L0034
	stx     L0034+1
	jmp     L004B
L005F:	lda     #<(L0033)
	ldx     #>(L0033)
	jsr     pushax
	lda     #<(L0062)
	ldx     #>(L0062)
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	ldy     #$09
	jsr     ldaxidx
	jsr     incax1
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	ldy     #$07
	jsr     pushwidx
	ldy     #$09
	jsr     ldaxysp
	ldy     #$0B
	jsr     pushwidx
	ldx     #$00
	lda     #$64
	jsr     tosmoda0
	jsr     pushax
	ldy     #$0A
	jsr     _sprintf
	jmp     L004B
L0068:	lda     #<(L0033)
	ldx     #>(L0033)
	jsr     pushax
	lda     #<(L006B)
	ldx     #>(L006B)
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	ldy     #$0B
	jsr     ldaxidx
	sta     ptr1
	stx     ptr1+1
	lda     #$6C
	clc
	adc     ptr1
	pha
	lda     #$07
	adc     ptr1+1
	tax
	pla
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	ldy     #$09
	jsr     ldaxidx
	jsr     incax1
	jsr     pushax
	ldy     #$09
	jsr     ldaxysp
	ldy     #$07
	jsr     pushwidx
	ldy     #$0A
	jsr     _sprintf
	jmp     L004B
L0071:	lda     #<(L0033)
	ldx     #>(L0033)
	jsr     pushax
	lda     #<(L0074)
	ldx     #>(L0074)
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	ldy     #$05
	jsr     pushwidx
	ldy     #$06
	jsr     _sprintf
	jmp     L004B
L0078:	lda     #<(L0033)
	ldx     #>(L0033)
	jsr     pushax
	lda     #<(L007B)
	ldx     #>(L007B)
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	ldy     #$05
	jsr     ldaxidx
	ldy     #$0B
	jsr     incaxy
	jsr     pushax
	ldx     #$00
	lda     #$0C
	jsr     tosmoda0
	jsr     incax1
	jsr     pushax
	ldy     #$06
	jsr     _sprintf
	jmp     L004B
L0080:	lda     #<(L0033)
	ldx     #>(L0033)
	jsr     pushax
	lda     #<(L0083)
	ldx     #>(L0083)
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	ldy     #$03
	jsr     pushwidx
	ldy     #$06
	jsr     _sprintf
	jmp     L004B
L0087:	jsr     ldax0sp
	ldy     #$05
	jsr     ldaxidx
	cmp     #$0C
	txa
	sbc     #$00
	bvs     L008B
	eor     #$80
L008B:	bpl     L008D
	lda     #<(L008C)
	ldx     #>(L008C)
	jmp     L0090
L008D:	lda     #<(L008F)
	ldx     #>(L008F)
L0090:	sta     L0034
	stx     L0034+1
	jmp     L004B
L0093:	lda     #<(L0033)
	ldx     #>(L0033)
	jsr     pushax
	lda     #<(L0096)
	ldx     #>(L0096)
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	jsr     pushw
	ldy     #$06
	jsr     _sprintf
	jmp     L004B
L009A:	lda     #<(L0033)
	ldx     #>(L0033)
	jsr     pushax
	lda     #<(L009D)
	ldx     #>(L009D)
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	ldy     #$0F
	jsr     ldaxidx
	jsr     incax7
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	ldy     #$0D
	jsr     ldaxidx
	jsr     tossubax
	jsr     pushax
	lda     #$07
	jsr     tosdiva0
	jsr     pushax
	ldy     #$06
	jsr     _sprintf
	jmp     L004B
L00A2:	lda     #<(L0033)
	ldx     #>(L0033)
	jsr     pushax
	lda     #<(L00A5)
	ldx     #>(L00A5)
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	ldy     #$0F
	jsr     ldaxidx
	jsr     incax7
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	ldy     #$0C
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	iny
	ora     (ptr1),y
	beq     L00AA
	ldy     #$07
	jsr     ldaxysp
	ldy     #$0D
	jsr     ldaxidx
	jsr     decax1
	jmp     L00AC
L00AA:	tax
	lda     #$06
L00AC:	jsr     tossubax
	jsr     pushax
	lda     #$07
	jsr     tosdiva0
	jsr     pushax
	ldy     #$06
	jsr     _sprintf
	jmp     L004B
L00AF:	lda     #<(L0033)
	ldx     #>(L0033)
	jsr     pushax
	lda     #<(L00B2)
	ldx     #>(L00B2)
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	ldy     #$05
	jsr     pushwidx
	ldy     #$07
	jsr     ldaxysp
	ldy     #$03
	jsr     pushwidx
	ldy     #$09
	jsr     ldaxysp
	jsr     pushw
	ldy     #$0A
	jsr     _sprintf
	jmp     L004B
L00B8:	lda     #<(L0033)
	ldx     #>(L0033)
	jsr     pushax
	lda     #<(L00BB)
	ldx     #>(L00BB)
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	ldy     #$0B
	jsr     ldaxidx
	sta     ptr1
	stx     ptr1+1
	lda     #$6C
	clc
	adc     ptr1
	pha
	lda     #$07
	adc     ptr1+1
	tax
	pla
	jsr     pushax
	ldy     #$06
	jsr     _sprintf
	jmp     L004B
L00BF:	jsr     ldax0sp
	ldy     #$10
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	iny
	ora     (ptr1),y
	beq     L00C2
	lda     #<(__tz+10)
	ldx     #>(__tz+10)
	jmp     L00C4
L00C2:	lda     #<(__tz+5)
	ldx     #>(__tz+5)
L00C4:	sta     L0034
	stx     L0034+1
	jmp     L004B
L00C7:	lda     #<(L0033)
	ldx     #>(L0033)
	jsr     pushax
	lda     #<(L00CA)
	ldx     #>(L00CA)
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	ldy     #$0D
	jsr     ldaxidx
	jsr     aslax1
	clc
	adc     #<(L0006)
	tay
	txa
	adc     #>(L0006)
	tax
	tya
	jsr     pushw
	ldy     #$06
	jsr     _sprintf
	jmp     L004B
L00CF:	lda     #<(L0033)
	ldx     #>(L0033)
	jsr     pushax
	lda     #<(L00D2)
	ldx     #>(L00D2)
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	ldy     #$09
	jsr     ldaxidx
	jsr     aslax1
	clc
	adc     #<(L0016)
	tay
	txa
	adc     #>(L0016)
	tax
	tya
	jsr     pushw
	ldy     #$06
	jsr     _sprintf
	jmp     L004B
L00D7:	lda     #<(L0033)
	ldx     #>(L0033)
	jsr     pushax
	lda     #<(L00DA)
	ldx     #>(L00DA)
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	ldy     #$0D
	jsr     ldaxidx
	jsr     aslax1
	clc
	adc     #<(L0006)
	tay
	txa
	adc     #>(L0006)
	tax
	tya
	jsr     pushw
	ldy     #$07
	jsr     ldaxysp
	ldy     #$09
	jsr     ldaxidx
	jsr     aslax1
	clc
	adc     #<(L0016)
	tay
	txa
	adc     #>(L0016)
	tax
	tya
	jsr     pushw
	ldy     #$09
	jsr     ldaxysp
	ldy     #$07
	jsr     pushwidx
	ldy     #$0B
	jsr     ldaxysp
	ldy     #$05
	jsr     pushwidx
	ldy     #$0D
	jsr     ldaxysp
	ldy     #$03
	jsr     pushwidx
	ldy     #$0F
	jsr     ldaxysp
	jsr     pushw
	ldy     #$11
	jsr     ldaxysp
	ldy     #$0B
	jsr     ldaxidx
	sta     ptr1
	stx     ptr1+1
	lda     #$6C
	clc
	adc     ptr1
	pha
	lda     #$07
	adc     ptr1+1
	tax
	pla
	jsr     pushax
	ldy     #$12
	jsr     _sprintf
	jmp     L004B
L00E6:	lda     #<(L0033)
	ldx     #>(L0033)
	jsr     pushax
	lda     #<(L00E9)
	ldx     #>(L00E9)
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	ldy     #$07
	jsr     pushwidx
	ldy     #$06
	jsr     _sprintf
	jmp     L004B
L00ED:	lda     #<(L0033)
	ldx     #>(L0033)
	jsr     pushax
	lda     #<(L00F0)
	ldx     #>(L00F0)
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	ldy     #$0F
	jsr     ldaxidx
	jsr     incax1
	jsr     pushax
	ldy     #$06
	jsr     _sprintf
	jmp     L004B
L00F4:	lda     #<(L0033)
	ldx     #>(L0033)
	jsr     pushax
	lda     #<(L00F7)
	ldx     #>(L00F7)
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	ldy     #$09
	jsr     ldaxidx
	jsr     incax1
	jsr     pushax
	ldy     #$06
	jsr     _sprintf
	jmp     L004B
L00FB:	jsr     ldax0sp
	ldy     #$05
	jsr     ldaxidx
	cmp     #$0C
	txa
	sbc     #$00
	bvs     L00FF
	eor     #$80
L00FF:	bpl     L0101
	lda     #<(L0100)
	ldx     #>(L0100)
	jmp     L0104
L0101:	lda     #<(L0103)
	ldx     #>(L0103)
L0104:	sta     L0034
	stx     L0034+1
	jmp     L004B
L0107:	lda     #<(L0033)
	ldx     #>(L0033)
	jsr     pushax
	lda     #<(L010A)
	ldx     #>(L010A)
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	ldy     #$0D
	jsr     pushwidx
	ldy     #$06
	jsr     _sprintf
	jmp     L004B
L010E:	lda     #<(L0033)
	ldx     #>(L0033)
	jsr     pushax
	lda     #<(L0111)
	ldx     #>(L0111)
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	ldy     #$0B
	jsr     ldaxidx
	sta     ptr1
	stx     ptr1+1
	lda     #$6C
	clc
	adc     ptr1
	pha
	lda     #$07
	adc     ptr1+1
	tax
	pla
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	ldy     #$09
	jsr     ldaxidx
	jsr     incax1
	jsr     pushax
	ldy     #$09
	jsr     ldaxysp
	ldy     #$07
	jsr     pushwidx
	ldy     #$0A
	jsr     _sprintf
	jmp     L004B
L0117:	lda     #<(L0033)
	ldx     #>(L0033)
	jsr     pushax
	lda     #<(L011A)
	ldx     #>(L011A)
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	ldy     #$0B
	jsr     pushwidx
	ldx     #$00
	lda     #$64
	jsr     tosmoda0
	jsr     pushax
	ldy     #$06
	jsr     _sprintf
	jmp     L004B
L0136:	sty     L0033
L004B:	lda     L0034
	ldx     L0034+1
	jsr     _strlen
	sta     L0030
	stx     L0030+1
	clc
	adc     L002F
	sta     L002F
	txa
	adc     L002F+1
	sta     L002F+1
	lda     L002F
	ldy     #$04
	cmp     (sp),y
	lda     L002F+1
	iny
	sbc     (sp),y
	jcs     L0037
	ldy     #$09
	jsr     pushwysp
	lda     L0034
	ldx     L0034+1
	jsr     pushax
	lda     L0030
	ldx     L0030+1
	jsr     _memcpy
	lda     L0030
	ldx     L0030+1
	ldy     #$06
	jsr     addeqysp
	jmp     L0037
L0045:	ldy     #$07
	jsr     ldaxysp
	sta     regsave
	stx     regsave+1
	jsr     incax1
	ldy     #$06
	jsr     staxysp
	lda     L0031
	ldy     #$00
	sta     (regsave),y
	inc     L002F
	jne     L0037
	inc     L002F+1
	jmp     L0037

.endproc

