;
; File generated by cc65 v 2.17 - Git 582aa41
;
	.fopt		compiler,"cc65 v 2.17 - Git 582aa41"
	.setcpu		"65C02"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.import		_malloc
	.import		_free
	.import		_read
	.import		_open
	.import		_close
	.import		__oserror
	.import		__directerrno
	.export		_opendir
	.import		__cwd

; ---------------------------------------------------------------
; __near__ struct DIR * __near__ __fastcall__ opendir (register __near__ const unsigned char *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_opendir: near

.segment	"CODE"

	jsr     pushax
	ldy     #$00
	ldx     #$04
	jsr     regswap2
	lda     regbank+2
	ldx     regbank+3
	jsr     pushax
	ldx     #$02
	lda     #$05
	jsr     _malloc
	sta     regbank+2
	stx     regbank+2+1
	cpx     #$00
	bne     L000D
	cmp     #$00
	bne     L000D
	lda     #$02
	jsr     __directerrno
	jmp     L003F
L000D:	lda     (regbank+4)
	cmp     #$2E
	bne     L0017
	lda     #>(__cwd)
	sta     regbank+4+1
	lda     #<(__cwd)
	sta     regbank+4
L0017:	lda     regbank+2
	ldx     regbank+2+1
	jsr     pushax
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	lda     #$01
	jsr     pusha0
	ldy     #$04
	jsr     _open
	ldy     #$00
	jsr     staxspidx
	cpx     #$FF
	bne     L003E
	cmp     #$FF
	beq     L001B
L003E:	iny
	lda     (regbank+2),y
	tax
	lda     (regbank+2)
	jsr     pushax
	lda     regbank+2
	ldx     regbank+2+1
	jsr     incax5
	jsr     pushax
	ldx     #$02
	lda     #$00
	jsr     _read
	cpx     #$02
	bne     L0022
	cmp     #$00
	bne     L0022
	ldy     #$28
	lda     (regbank+2),y
	ldy     #$02
	sta     (regbank+2),y
	ldy     #$29
	lda     (regbank+2),y
	ldy     #$03
	sta     (regbank+2),y
	lda     #$01
	iny
	sta     (regbank+2),y
	lda     regbank+2
	ldx     regbank+2+1
	bra     L000C
L0022:	lda     __oserror
	bne     L0033
	lda     #$07
	jsr     __directerrno
L0033:	ldy     #$01
	lda     (regbank+2),y
	tax
	lda     (regbank+2)
	jsr     _close
L001B:	lda     regbank+2
	ldx     regbank+2+1
	jsr     _free
L003F:	ldx     #$00
	txa
L000C:	pha
	ldy     #$00
L003C:	lda     (sp),y
	sta     regbank+2,y
	iny
	cpy     #$04
	bne     L003C
	pla
	jmp     incsp4

.endproc

