Performing C SOURCE FILE Test CMAKE_HAVE_LIBC_PTHREAD failed with the following output:
Change Dir: /run/media/filippo/AUKEY/Università/Embedded & IoT Systems Design/Laboratorio/Lesson 2/sources/root_comparison/AT4/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_183dc/fast && /usr/bin/make  -f CMakeFiles/cmTC_183dc.dir/build.make CMakeFiles/cmTC_183dc.dir/build
make[1]: Entering directory '/run/media/filippo/AUKEY/Università/Embedded & IoT Systems Design/Laboratorio/Lesson 2/sources/root_comparison/AT4/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_183dc.dir/src.c.o
/usr/bin/cc   -DCMAKE_HAVE_LIBC_PTHREAD -o CMakeFiles/cmTC_183dc.dir/src.c.o -c "/run/media/filippo/AUKEY/Università/Embedded & IoT Systems Design/Laboratorio/Lesson 2/sources/root_comparison/AT4/build/CMakeFiles/CMakeTmp/src.c"
Linking C executable cmTC_183dc
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_183dc.dir/link.txt --verbose=1
/usr/bin/cc  -DCMAKE_HAVE_LIBC_PTHREAD CMakeFiles/cmTC_183dc.dir/src.c.o -o cmTC_183dc 
/usr/bin/ld: CMakeFiles/cmTC_183dc.dir/src.c.o: in function `main':
src.c:(.text+0x3e): undefined reference to `pthread_create'
/usr/bin/ld: src.c:(.text+0x4a): undefined reference to `pthread_detach'
/usr/bin/ld: src.c:(.text+0x56): undefined reference to `pthread_cancel'
/usr/bin/ld: src.c:(.text+0x67): undefined reference to `pthread_join'
collect2: error: ld returned 1 exit status
make[1]: *** [CMakeFiles/cmTC_183dc.dir/build.make:106: cmTC_183dc] Error 1
make[1]: Leaving directory '/run/media/filippo/AUKEY/Università/Embedded & IoT Systems Design/Laboratorio/Lesson 2/sources/root_comparison/AT4/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:140: cmTC_183dc/fast] Error 2


Source file was:
#include <pthread.h>

void* test_func(void* data)
{
  return data;
}

int main(void)
{
  pthread_t thread;
  pthread_create(&thread, NULL, test_func, NULL);
  pthread_detach(thread);
  pthread_cancel(thread);
  pthread_join(thread, NULL);
  pthread_atfork(NULL, NULL, NULL);
  pthread_exit(NULL);

  return 0;
}

Performing C SOURCE FILE Test CMAKE_HAVE_LIBC_PTHREAD failed with the following output:
Change Dir: /home/filippo/Documents/Università/Embedded & IoT Systems Design/Laboratorio/Lesson 2/sources/root_comparison/AT4/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_247fe/fast && /usr/bin/make  -f CMakeFiles/cmTC_247fe.dir/build.make CMakeFiles/cmTC_247fe.dir/build
make[1]: Entering directory '/home/filippo/Documents/Università/Embedded & IoT Systems Design/Laboratorio/Lesson 2/sources/root_comparison/AT4/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_247fe.dir/src.c.o
/usr/bin/cc   -DCMAKE_HAVE_LIBC_PTHREAD -o CMakeFiles/cmTC_247fe.dir/src.c.o -c "/home/filippo/Documents/Università/Embedded & IoT Systems Design/Laboratorio/Lesson 2/sources/root_comparison/AT4/build/CMakeFiles/CMakeTmp/src.c"
Linking C executable cmTC_247fe
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_247fe.dir/link.txt --verbose=1
/usr/bin/cc  -DCMAKE_HAVE_LIBC_PTHREAD CMakeFiles/cmTC_247fe.dir/src.c.o -o cmTC_247fe 
/usr/bin/ld: CMakeFiles/cmTC_247fe.dir/src.c.o: in function `main':
src.c:(.text+0x3e): undefined reference to `pthread_create'
/usr/bin/ld: src.c:(.text+0x4a): undefined reference to `pthread_detach'
/usr/bin/ld: src.c:(.text+0x56): undefined reference to `pthread_cancel'
/usr/bin/ld: src.c:(.text+0x67): undefined reference to `pthread_join'
collect2: error: ld returned 1 exit status
make[1]: *** [CMakeFiles/cmTC_247fe.dir/build.make:106: cmTC_247fe] Error 1
make[1]: Leaving directory '/home/filippo/Documents/Università/Embedded & IoT Systems Design/Laboratorio/Lesson 2/sources/root_comparison/AT4/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:140: cmTC_247fe/fast] Error 2


Source file was:
#include <pthread.h>

void* test_func(void* data)
{
  return data;
}

int main(void)
{
  pthread_t thread;
  pthread_create(&thread, NULL, test_func, NULL);
  pthread_detach(thread);
  pthread_cancel(thread);
  pthread_join(thread, NULL);
  pthread_atfork(NULL, NULL, NULL);
  pthread_exit(NULL);

  return 0;
}

