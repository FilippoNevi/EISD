;
; File generated by cc65 v 2.17 - Git 582aa41
;
	.fopt		compiler,"cc65 v 2.17 - Git 582aa41"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.import		__errno
	.import		__cbm_filetype
	.export		_readdir
	.import		__dirread
	.import		__dirread1

; ---------------------------------------------------------------
; __near__ struct dirent * __near__ __fastcall__ readdir (register __near__ struct DIR *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_readdir: near

.segment	"RODATA"

L0015:
	.word	$0000
L001C:
	.word	$0000
L002D:
	.word	$0000
L0036:
	.word	$0000

.segment	"BSS"

L0009:
	.res	1,$00
L000A:
	.res	1,$00
L000C:
	.res	23,$00

.segment	"CODE"

	jsr     pushax
	ldy     #$00
	ldx     #$04
	jsr     regswap2
	lda     regbank+2
	ldx     regbank+3
	jsr     pushax
	lda     regbank+1
	jsr     pusha
	lda     regbank+0
	jsr     pusha
	ldy     #$40
	jsr     subysp
	ldy     #$03
	lda     (regbank+4),y
	sta     L000C+17+1
	dey
	lda     (regbank+4),y
	sta     L000C+17
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	lda     #$02
	jsr     leaa0sp
	jsr     pushax
	lda     #$02
	jsr     __dirread
	tax
	jeq     L0008
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	lda     #<(L000C+19)
	ldx     #>(L000C+19)
	jsr     pushax
	lda     #$02
	jsr     __dirread
	tax
	jeq     L0008
	lda     #$00
	sta     regbank+0
	lda     sp+1
	sta     regbank+2+1
	lda     sp
	sta     regbank+2
L001D:	lda     regbank+0
	cmp     #$40
	bcs     L001E
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	lda     regbank+2
	ldx     regbank+2+1
	jsr     __dirread1
	tax
	jeq     L0008
	inc     regbank+0
	ldy     #$00
	lda     (regbank+2),y
	beq     L001E
	inc     regbank+2
	bne     L001D
	inc     regbank+2+1
	jmp     L001D
L001E:	ldy     #$03
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     regbank+0
	jsr     incax4
	clc
	adc     ptr1
	pha
	txa
	adc     ptr1+1
	tax
	pla
	ldy     #$02
	sta     (regbank+4),y
	iny
	txa
	sta     (regbank+4),y
	ldx     #$00
	lda     (sp,x)
	cmp     #$42
	jeq     L0092
	txa
	sta     regbank+1
	sta     L000A
	sta     L0009
	lda     sp+1
	sta     regbank+2+1
	lda     sp
	sta     regbank+2
	jmp     L0091
L008C:	lda     L0009
	beq     L0047
	cmp     #$01
	beq     L004D
	cmp     #$02
	beq     L0068
	cmp     #$03
	jeq     L0075
	jmp     L0090
L0047:	lda     (regbank+2,x)
	cmp     #$22
	jne     L0090
	lda     #$01
	sta     L0009
	jmp     L0090
L004D:	ldy     #$00
	lda     (regbank+2),y
	cmp     #$22
	bne     L008E
	ldy     L000A
	txa
	sta     L000C,y
	lda     L000A
	sta     L000C+22
	lda     L000C+17
	cmp     #$03
	lda     L000C+17+1
	sbc     #$00
	bcc     L008D
	lda     #$02
	sta     L0009
	jmp     L0090
L008D:	lda     #$05
	sta     L000C+21
	lda     #<(L000C)
	ldx     #>(L000C)
	jmp     L0008
L008E:	lda     L000A
	cmp     #$10
	bcs     L0090
	lda     #<(L000C)
	ldx     #>(L000C)
	clc
	adc     L000A
	bcc     L0064
	inx
L0064:	sta     ptr1
	stx     ptr1+1
	lda     (regbank+2),y
	sta     (ptr1),y
	inc     L000A
	jmp     L0090
L0068:	lda     (regbank+2,x)
	cmp     #$20
	beq     L0090
	jsr     __cbm_filetype
	sta     L000C+21
	ldy     #$00
	lda     (regbank+2),y
	cmp     #$44
	bne     L006E
	lda     #$03
	sta     L0009
	jmp     L0090
L006E:	lda     #<(L000C)
	ldx     #>(L000C)
	jmp     L0008
L0075:	lda     (regbank+2,x)
	cmp     #$45
	beq     L0078
	cmp     #$49
	bne     L008F
	lda     #$02
	jmp     L008B
L008F:	lda     #$04
L008B:	sta     L000C+21
L0078:	lda     #<(L000C)
	ldx     #>(L000C)
	jmp     L0008
L0090:	inc     regbank+1
	inc     regbank+2
	bne     L0085
	inc     regbank+2+1
L0085:	ldx     #$00
L0091:	lda     regbank+1
	cmp     regbank+0
	jcc     L008C
	lda     #$0B
	sta     __errno
	stx     __errno+1
L0092:	txa
L0008:	pha
	stx     tmp1
	ldy     #$45
	ldx     #$05
L008A:	lda     (sp),y
	sta     regbank+0,x
	dey
	dex
	bpl     L008A
	ldx     tmp1
	pla
	ldy     #$46
	jmp     addysp

.endproc

