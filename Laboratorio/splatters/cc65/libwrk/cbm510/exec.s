;
; File generated by cc65 v 2.17 - Git 582aa41
;
	.fopt		compiler,"cc65 v 2.17 - Git 582aa41"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.import		_open
	.import		_close
	.export		_exec
	.import		_exit
	.import		_utoa
	.import		_strncat
	.import		__mappederrno
	.import		_getcurrentdevice
	.import		_pokewsys
	.importzp	_txtptr
	.import		_basbuf
	.importzp	_basbuf_len

.segment	"DATA"

.segment	"LOWCODE"
_basic:
	.byte	$00
	.addr	_basic+37
	.word	$0000
	.byte	$9C
	.byte	$3A
	.byte	$93
	.byte	$22,$22
	.byte	$AA
	.byte	$22
	.byte	$22,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20
	.byte	$2C
	.byte	$30,$31,$00
.segment	"DATA"

; ---------------------------------------------------------------
; int __near__ __fastcall__ exec (__near__ const unsigned char *, __near__ const unsigned char *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_exec: near

.segment	"BSS"

L001B:
	.res	2,$00
L001C:
	.res	1,$00
L001D:
	.res	1,$00

.segment	"CODE"

	jsr     pushax
	jsr     _getcurrentdevice
	sta     L001C
	cmp     #$08
	bcs     L0022
	cmp     #$01
	bne     L005A
L0022:	cmp     #$1F
	bcc     L005B
L005A:	lda     #$09
	jsr     __mappederrno
	jmp     incsp4
L005B:	lda     L001C
	jsr     pusha0
	lda     #<(_basic+34)
	ldx     #>(_basic+34)
	jsr     pushax
	ldx     #$00
	lda     #$0A
	jsr     _utoa
	lda     L001C
	cmp     #$01
	beq     L005C
	ldy     #$05
	jsr     pushwysp
	lda     #$01
	jsr     pusha0
	ldy     #$04
	jsr     _open
	sta     L001B
	stx     L001B+1
	cpx     #$80
	bcc     L0031
	ldx     #$FF
	txa
	jmp     incsp4
L0031:	lda     L001B
	ldx     L001B+1
	jsr     _close
L005C:	lda     #$00
	sta     L001D
L0038:	lda     #<(_basic+12)
	ldx     #>(_basic+12)
	clc
	adc     L001D
	bcc     L003F
	inx
L003F:	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	ldy     L001D
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	ldy     #$00
	jsr     staspidx
	cmp     #$00
	beq     L0039
	inc     L001D
	lda     L001D
	cmp     #$14
	bcc     L0038
L0039:	ldy     L001D
	lda     #$22
	sta     _basic+12,y
	lda     #$8F
	sta     _basbuf
	lda     #$00
	sta     _basbuf+1
	tay
	lda     (sp),y
	iny
	ora     (sp),y
	beq     L004D
	lda     #<(_basbuf)
	ldx     #>(_basbuf)
	jsr     pushax
	ldy     #$05
	jsr     pushwysp
	lda     #<(_basbuf_len)
	ldx     #>(_basbuf_len)
	jsr     decax2
	jsr     _strncat
L004D:	lda     #<(_txtptr)
	ldx     #>(_txtptr)
	jsr     pushax
	lda     #<(_basic)
	ldx     #>(_basic)
	jsr     _pokewsys
	jsr     _exit
	jmp     incsp4

.endproc

